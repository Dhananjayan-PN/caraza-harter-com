{"kind": "Listing", "data": {"after": "t3_qvl07z", "dist": 27, "modhash": "", "geo_filter": null, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.", "author_fullname": "t2_145f96", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Sunday Daily Thread: What's everyone working on this week?", "link_flair_richtext": [{"e": "text", "t": "Daily Thread"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "daily-thread", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qtddtc", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.94, "author_flair_background_color": "#7289da", "subreddit_type": "public", "ups": 13, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": "294da566-de3a-11ea-b735-0e5977e6a00f", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Daily Thread", "can_mod_post": false, "score": 13, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [{"a": ":python_discord:", "e": "emoji", "u": "https://emoji.redditmedia.com/x0lrxnhaazg51_t5_2qh0y/python_discord"}, {"e": "text", "t": " Python Discord Staff"}], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1636848010.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "richtext", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Tell &lt;a href=\"/r/python\"&gt;/r/python&lt;/a&gt; what you&amp;#39;re working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": ":python_discord: Python Discord Staff", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#00a6a5", "id": "qtddtc", "is_robot_indexable": true, "report_reasons": null, "author": "Im__Joseph", "discussion_type": null, "num_comments": 37, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "light", "permalink": "/r/Python/comments/qtddtc/sunday_daily_thread_whats_everyone_working_on/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/Python/comments/qtddtc/sunday_daily_thread_whats_everyone_working_on/", "subreddit_subscribers": 877944, "created_utc": 1636848010.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "author_fullname": "t2_145f96", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Wednesday Daily Thread: Beginner questions", "link_flair_richtext": [{"e": "text", "t": "Daily Thread"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "daily-thread", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvlvlt", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": "#7289da", "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": "294da566-de3a-11ea-b735-0e5977e6a00f", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Daily Thread", "can_mod_post": false, "score": 3, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [{"a": ":python_discord:", "e": "emoji", "u": "https://emoji.redditmedia.com/x0lrxnhaazg51_t5_2qh0y/python_discord"}, {"e": "text", "t": " Python Discord Staff"}], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1637107218.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "richtext", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!&lt;/p&gt;\n\n&lt;p&gt;This thread may be fairly low volume in replies, if you don&amp;#39;t receive a response we recommend looking at &lt;a href=\"/r/LearnPython\"&gt;r/LearnPython&lt;/a&gt; or joining the Python Discord server at &lt;a href=\"https://discord.gg/python\"&gt;https://discord.gg/python&lt;/a&gt; where you stand a better chance of receiving a response.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?auto=webp&amp;s=0c1985f1543fe7a14d14311c2652d980005ef82b", "width": 512, "height": 288}, "resolutions": [{"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5d9915f2e93ddb2e01d7d244b475bd8ba556f75", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a03b56135a67422f61f4411ebaf79abf530f99be", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=308a1d0e6203c761fc5dce0329a967ef5a390785", "width": 320, "height": 180}], "variants": {}, "id": "aNa9dCzuqtUFBkZTt98jjYpcv1i_lqriq_lbtm_LcRo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": ":python_discord: Python Discord Staff", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#00a6a5", "id": "qvlvlt", "is_robot_indexable": true, "report_reasons": null, "author": "Im__Joseph", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "light", "permalink": "/r/Python/comments/qvlvlt/wednesday_daily_thread_beginner_questions/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/Python/comments/qvlvlt/wednesday_daily_thread_beginner_questions/", "subreddit_subscribers": 877944, "created_utc": 1637107218.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_4i5a3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Let's Write a Game Boy Emulator in Python", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 72, "top_awarded_type": null, "hide_score": false, "name": "t3_qvc1rs", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "ups": 450, "total_awards_received": 3, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 450, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/20wRAQOk8sErZyFldsdnm_nEXEBmRzq77J2KlmUN0Fk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637081148.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "inspiredpython.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.inspiredpython.com/course/game-boy-emulator/let-s-write-a-game-boy-emulator-in-python", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/fzcT8iDxcv6OHKZ-LZbWpt5554HN-9KKIqksFUEj9Mc.jpg?auto=webp&amp;s=feb211bb5a8dddee66528a4b4c286c394de4b616", "width": 1200, "height": 625}, "resolutions": [{"url": "https://external-preview.redd.it/fzcT8iDxcv6OHKZ-LZbWpt5554HN-9KKIqksFUEj9Mc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=43b137b82eb4cb418d350fa7408c233ea790e19d", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/fzcT8iDxcv6OHKZ-LZbWpt5554HN-9KKIqksFUEj9Mc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9aa669866278cb987c0dbed8899a2228041634cd", "width": 216, "height": 112}, {"url": "https://external-preview.redd.it/fzcT8iDxcv6OHKZ-LZbWpt5554HN-9KKIqksFUEj9Mc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0238f09532f3e36a818ec2f4bc85d86a6cd714f1", "width": 320, "height": 166}, {"url": "https://external-preview.redd.it/fzcT8iDxcv6OHKZ-LZbWpt5554HN-9KKIqksFUEj9Mc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=723e30681cc024a1fae36f91434a29d94102408d", "width": 640, "height": 333}, {"url": "https://external-preview.redd.it/fzcT8iDxcv6OHKZ-LZbWpt5554HN-9KKIqksFUEj9Mc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=acfe29baf5bfa84e0134b46f58646fdfb24287b8", "width": 960, "height": 500}, {"url": "https://external-preview.redd.it/fzcT8iDxcv6OHKZ-LZbWpt5554HN-9KKIqksFUEj9Mc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=076ddf6a4668bc752fae9aa2e2ef44563a11efa3", "width": 1080, "height": 562}], "variants": {}, "id": "xpMj8-Lbk_EsjfU2PfZC-vsWdArIv9tdm91b5voYlyU"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "id": "award_f44611f1-b89e-46dc-97fe-892280b13b82", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Thank you stranger. Shows the award.", "end_date": null, "subreddit_coin_reward": 0, "count": 2, "static_icon_height": 2048, "name": "Helpful", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png"}, {"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 125, "id": "award_5f123e3d-4f48-42f4-9c11-e98b566d5897", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "When you come across a feel-good thing.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Wholesome", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "qvc1rs", "is_robot_indexable": true, "report_reasons": null, "author": "mickeyp", "discussion_type": null, "num_comments": 28, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvc1rs/lets_write_a_game_boy_emulator_in_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.inspiredpython.com/course/game-boy-emulator/let-s-write-a-game-boy-emulator-in-python", "subreddit_subscribers": 877944, "created_utc": 1637081148.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_gej3oikz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Python: Please stop screwing over Linux distros", "link_flair_richtext": [{"e": "text", "t": "News"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "news", "downs": 0, "thumbnail_height": 138, "top_awarded_type": null, "hide_score": false, "name": "t3_qv5zv0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.82, "author_flair_background_color": null, "ups": 382, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "News", "can_mod_post": false, "score": 382, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/5VGwwdxwQa-CZAiC6q8man5D7LDGqoN3GX9nIkTVUXk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637062982.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "drewdevault.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://drewdevault.com/2021/11/16/Python-stop-screwing-distros-over.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/9KA0r6gtIIqQue7iG8lwhzxuffpDlxhWWbpFYuDIYF0.jpg?auto=webp&amp;s=6e3ef63d8ad345a3b3f3c122ecf3acce1dc88250", "width": 492, "height": 487}, "resolutions": [{"url": "https://external-preview.redd.it/9KA0r6gtIIqQue7iG8lwhzxuffpDlxhWWbpFYuDIYF0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3ed0167917fce963e553afe40bf9e748a31c4829", "width": 108, "height": 106}, {"url": "https://external-preview.redd.it/9KA0r6gtIIqQue7iG8lwhzxuffpDlxhWWbpFYuDIYF0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a6fe0318ded810d85d8d0ebd9719f4fcbe37d134", "width": 216, "height": 213}, {"url": "https://external-preview.redd.it/9KA0r6gtIIqQue7iG8lwhzxuffpDlxhWWbpFYuDIYF0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d73849ea1f35928bc09808de329392d702bf6844", "width": 320, "height": 316}], "variants": {}, "id": "lnU32yfHkvrvwVH3uvszOkwS-HX8TsuoTEpX9RzViKU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "", "id": "qv5zv0", "is_robot_indexable": true, "report_reasons": null, "author": "busevepet", "discussion_type": null, "num_comments": 240, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qv5zv0/python_please_stop_screwing_over_linux_distros/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://drewdevault.com/2021/11/16/Python-stop-screwing-distros-over.html", "subreddit_subscribers": 877944, "created_utc": 1637062982.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "After 4 years of fixing issues and merging pull-requests, we found that Lark has grown a little encumbered, like a lobster that's grown too big for its shell. And so, like that proverbial lobster, we took the opportunity of a new major version to break the shell and make a few backward-incompatible changes.\n\nChiefly among the changes, Lark 1.0 dropped Python 2 support, and instead now uses the full range of Python 3 features, including type annotations. The API has also been straightened out and made more congruous. A full list of the changes is available in the release notes: https://github.com/lark-parser/lark/releases/tag/1.0.0\n\nWhile version 1.0 itself doesn't boast big new features (other than marking the API as stable), Lark has accumulated many cool features over the years, that even avid users may have missed:\n\n- Grammar composition - lark grammars can import rules from other grammars, and extend or override them (think inheritance).\n- Interactive parser - an interface that allows you to parse step-by-step. Useful for error handling and unusual parsing flows.\n- Reconstructor - using a grammar and a parse tree, Lark can generate text that would parse into that tree.\n- Ports - In addition to Python, you can also use Lark grammars to create parsers in Julia and Javascript.\n- Online IDE - you can try Lark in your browser. Useful for teaching parsing? - https://www.lark-parser.org/ide/\n\nIf you never tried Lark, perhaps now is the time!\n\nSee our project page to learn more: https://github.com/lark-parser/lark", "author_fullname": "t2_3e9sh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Lark 1.0 released - a parsing toolkit that is friendly, production-ready, and comprehensive.", "link_flair_richtext": [{"e": "text", "t": "News"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "news", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvu3ib", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.91, "author_flair_background_color": "", "subreddit_type": "public", "ups": 8, "total_awards_received": 2, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "News", "can_mod_post": false, "score": 8, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [{"e": "text", "t": "import inspect"}], "gildings": {"gid_1": 1}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1637135047.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "richtext", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;After 4 years of fixing issues and merging pull-requests, we found that Lark has grown a little encumbered, like a lobster that&amp;#39;s grown too big for its shell. And so, like that proverbial lobster, we took the opportunity of a new major version to break the shell and make a few backward-incompatible changes.&lt;/p&gt;\n\n&lt;p&gt;Chiefly among the changes, Lark 1.0 dropped Python 2 support, and instead now uses the full range of Python 3 features, including type annotations. The API has also been straightened out and made more congruous. A full list of the changes is available in the release notes: &lt;a href=\"https://github.com/lark-parser/lark/releases/tag/1.0.0\"&gt;https://github.com/lark-parser/lark/releases/tag/1.0.0&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;While version 1.0 itself doesn&amp;#39;t boast big new features (other than marking the API as stable), Lark has accumulated many cool features over the years, that even avid users may have missed:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Grammar composition - lark grammars can import rules from other grammars, and extend or override them (think inheritance).&lt;/li&gt;\n&lt;li&gt;Interactive parser - an interface that allows you to parse step-by-step. Useful for error handling and unusual parsing flows.&lt;/li&gt;\n&lt;li&gt;Reconstructor - using a grammar and a parse tree, Lark can generate text that would parse into that tree.&lt;/li&gt;\n&lt;li&gt;Ports - In addition to Python, you can also use Lark grammars to create parsers in Julia and Javascript.&lt;/li&gt;\n&lt;li&gt;Online IDE - you can try Lark in your browser. Useful for teaching parsing? - &lt;a href=\"https://www.lark-parser.org/ide/\"&gt;https://www.lark-parser.org/ide/&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you never tried Lark, perhaps now is the time!&lt;/p&gt;\n\n&lt;p&gt;See our project page to learn more: &lt;a href=\"https://github.com/lark-parser/lark\"&gt;https://github.com/lark-parser/lark&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/_yj6_i0xhw3T5Ip4W1VH7ZEPW0Y4URf4jz0_J3lcoCI.jpg?auto=webp&amp;s=a74397a4fc0a94984b5ca3de6d8b502c575da3f7", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/_yj6_i0xhw3T5Ip4W1VH7ZEPW0Y4URf4jz0_J3lcoCI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d8adf3353c5bea19d78d1e341c32cdd0d6c039a0", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/_yj6_i0xhw3T5Ip4W1VH7ZEPW0Y4URf4jz0_J3lcoCI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d63018b8c79017d160697f5b7674e20e15870f76", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/_yj6_i0xhw3T5Ip4W1VH7ZEPW0Y4URf4jz0_J3lcoCI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=459ff86f904973bb3f8061f441521f0244915e90", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/_yj6_i0xhw3T5Ip4W1VH7ZEPW0Y4URf4jz0_J3lcoCI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1196f1d3323b067b28046d744f419f63e2588f0a", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/_yj6_i0xhw3T5Ip4W1VH7ZEPW0Y4URf4jz0_J3lcoCI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=082b05cba7bf7b2d0c95424db91aae11a96fa84d", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/_yj6_i0xhw3T5Ip4W1VH7ZEPW0Y4URf4jz0_J3lcoCI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5654a7affefa90f91351c13f5c34d2a27455781e", "width": 1080, "height": 540}], "variants": {}, "id": "WUC-Ixm1MsblVz0nG_qTbKzyhL6vhfKxR5OcOY-1c9I"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 125, "id": "award_5f123e3d-4f48-42f4-9c11-e98b566d5897", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "When you come across a feel-good thing.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Wholesome", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=16&amp;height=16&amp;auto=webp&amp;s=92932f465d58e4c16b12b6eac4ca07d27e3d11c0", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=32&amp;height=32&amp;auto=webp&amp;s=d11484a208d68a318bf9d4fcf371171a1cb6a7ef", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=48&amp;height=48&amp;auto=webp&amp;s=febdf28b6f39f7da7eb1365325b85e0bb49a9f63", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=64&amp;height=64&amp;auto=webp&amp;s=b4406a2d88bf86fa3dc8a45aacf7e0c7bdccc4fb", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png?width=128&amp;height=128&amp;auto=webp&amp;s=19555b13e3e196b62eeb9160d1ac1d1b372dcb0b", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/5izbv4fn0md41_Wholesome.png"}, {"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "import inspect", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvu3ib", "is_robot_indexable": true, "report_reasons": null, "author": "erez27", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/Python/comments/qvu3ib/lark_10_released_a_parsing_toolkit_that_is/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvu3ib/lark_10_released_a_parsing_toolkit_that_is/", "subreddit_subscribers": 877944, "created_utc": 1637135047.0, "num_crossposts": 1, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Pretty much the title. I tried searching on the internet but I got intimidated with so many options to choose from. Please help a brother out. I would also like to make web apps too if possible.\n\nI know a little bit of Java and a decent amount of Python (matplotlib, NumPy, Pandas, PyQt, etc).", "author_fullname": "t2_6cnxper0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I am an intermediate in Python and now I want to make mobile apps, what should I learn?", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvvdgp", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.73, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 5, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1637140556.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Pretty much the title. I tried searching on the internet but I got intimidated with so many options to choose from. Please help a brother out. I would also like to make web apps too if possible.&lt;/p&gt;\n\n&lt;p&gt;I know a little bit of Java and a decent amount of Python (matplotlib, NumPy, Pandas, PyQt, etc).&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "id": "award_f44611f1-b89e-46dc-97fe-892280b13b82", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Thank you stranger. Shows the award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Helpful", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvvdgp", "is_robot_indexable": true, "report_reasons": null, "author": "justfuncontent", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvvdgp/i_am_an_intermediate_in_python_and_now_i_want_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvvdgp/i_am_an_intermediate_in_python_and_now_i_want_to/", "subreddit_subscribers": 877944, "created_utc": 1637140556.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I released tiptop, a system montitoring tools for the command line:\n\n[https://github.com/nschloe/tiptop](https://github.com/nschloe/tiptop)\n\nGot some good feedback so far, hope you like it too!\n\nhttps://preview.redd.it/imuek6rjf1081.png?width=1920&amp;format=png&amp;auto=webp&amp;s=b9b8ed64617ba6a0a8701f4f7baa5a75aee1345d", "author_fullname": "t2_120msm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "tiptop, a command-line \"graphical\" system monitor", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": 78, "top_awarded_type": null, "hide_score": false, "media_metadata": {"imuek6rjf1081": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 60, "x": 108, "u": "https://preview.redd.it/imuek6rjf1081.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=093b2c66cab28e25640b3cedaca599235a38cdd1"}, {"y": 121, "x": 216, "u": "https://preview.redd.it/imuek6rjf1081.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=310eba48b1b01e2fe266ebc5125f1a9405bc0656"}, {"y": 180, "x": 320, "u": "https://preview.redd.it/imuek6rjf1081.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=c58198ac3387b2aabc60fccd900085fc38125552"}, {"y": 360, "x": 640, "u": "https://preview.redd.it/imuek6rjf1081.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=e98e0896955fb8f87b78e28549800c66baab5c51"}, {"y": 540, "x": 960, "u": "https://preview.redd.it/imuek6rjf1081.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=97d83179fab180dc5e65b67f2ad165f3373b6348"}, {"y": 607, "x": 1080, "u": "https://preview.redd.it/imuek6rjf1081.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=154010fd96a550e34732ddd259df623b7161d895"}], "s": {"y": 1080, "x": 1920, "u": "https://preview.redd.it/imuek6rjf1081.png?width=1920&amp;format=png&amp;auto=webp&amp;s=b9b8ed64617ba6a0a8701f4f7baa5a75aee1345d"}, "id": "imuek6rjf1081"}}, "name": "t3_qvklbv", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.93, "author_flair_background_color": null, "ups": 33, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 33, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/OxTon4tS23aywEhuRvkNHsK5jgpEtFnEomuWLkEDvRI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "subreddit_type": "public", "created": 1637103477.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I released tiptop, a system montitoring tools for the command line:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/nschloe/tiptop\"&gt;https://github.com/nschloe/tiptop&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Got some good feedback so far, hope you like it too!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/imuek6rjf1081.png?width=1920&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b9b8ed64617ba6a0a8701f4f7baa5a75aee1345d\"&gt;https://preview.redd.it/imuek6rjf1081.png?width=1920&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=b9b8ed64617ba6a0a8701f4f7baa5a75aee1345d&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8K8VwQfaRCH-y8Mlf1iHwHxzBauUExzRaKfFKxmoEQI.jpg?auto=webp&amp;s=c0d755c7019d97abc4064dcf3098d42265158a00", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/8K8VwQfaRCH-y8Mlf1iHwHxzBauUExzRaKfFKxmoEQI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a48189f253b94f95f17b38d7d0a077f045bb1bb0", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/8K8VwQfaRCH-y8Mlf1iHwHxzBauUExzRaKfFKxmoEQI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=872256e811bf2b7bb2fbdf99146f4dd524674ed5", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/8K8VwQfaRCH-y8Mlf1iHwHxzBauUExzRaKfFKxmoEQI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1133a74b1cb9760d59fa5f77c7fddea9fd5cb252", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/8K8VwQfaRCH-y8Mlf1iHwHxzBauUExzRaKfFKxmoEQI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=14f69481bb18f6d2811ef347262f909dd42ac50b", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/8K8VwQfaRCH-y8Mlf1iHwHxzBauUExzRaKfFKxmoEQI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=181197c15d441209589f37d6bc1569c15eb076f9", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/8K8VwQfaRCH-y8Mlf1iHwHxzBauUExzRaKfFKxmoEQI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=705043fc013b4805cd0e9970b12b6a68bb49aade", "width": 1080, "height": 540}], "variants": {}, "id": "5PIepkcBnxd_GP-18lfErhNbrA65VhgOnqoTLnpStE8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "qvklbv", "is_robot_indexable": true, "report_reasons": null, "author": "nschloe", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvklbv/tiptop_a_commandline_graphical_system_monitor/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvklbv/tiptop_a_commandline_graphical_system_monitor/", "subreddit_subscribers": 877944, "created_utc": 1637103477.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_319ketpp", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "11 Algorithm to generate mazes: ( kruskal's, Ellers,...)", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_qvaww2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.97, "author_flair_background_color": null, "ups": 120, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/U3meEXvYFsc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "height": 200}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "11 Algorithms to generate mazes (python)", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/U3meEXvYFsc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Auctux", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/U3meEXvYFsc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/Auctux"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/U3meEXvYFsc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/qvaww2", "height": 200}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 120, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/s_mNuoz27SnWyrRchcpENLYMGOnvKrJl3HX3MSABTr0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637078209.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://youtu.be/U3meEXvYFsc", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/dUj7znoezM6dZvtguqjijKEM-wiKW-7TATDaiok3LgU.jpg?auto=webp&amp;s=9122dd620a54612514484b547c0d4bbedc100681", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/dUj7znoezM6dZvtguqjijKEM-wiKW-7TATDaiok3LgU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=dbc906c457098b930c0eb4bb69fcbff19b83d39b", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/dUj7znoezM6dZvtguqjijKEM-wiKW-7TATDaiok3LgU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2153b0d3f9987d0e2055760ec7191d4ddd179b0a", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/dUj7znoezM6dZvtguqjijKEM-wiKW-7TATDaiok3LgU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0255dbb1c01c34158ed10d96b3cc4535f2df88b", "width": 320, "height": 240}], "variants": {}, "id": "RrckYVWmUwT8DFy7SoqONdLpEOhDLp9wAN0mhajJrrU"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "qvaww2", "is_robot_indexable": true, "report_reasons": null, "author": "gentlemen34", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvaww2/11_algorithm_to_generate_mazes_kruskals_ellers/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/U3meEXvYFsc", "subreddit_subscribers": 877944, "created_utc": 1637078209.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "11 Algorithms to generate mazes (python)", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/U3meEXvYFsc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Auctux", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/U3meEXvYFsc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/Auctux"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I was blown away by this gem of a guide.\n\nIf you're barely dipping into intermediate python subjects like myself and wondering on what the next level is I recommend this guide. It has given me the motivation to revisit old projects and see how I can improve them.", "author_fullname": "t2_n4nwn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Getting to Know Asyncio \u00b7 Python Concurrency with asyncio MEAP V10", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvsv0m", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 8, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1637130034.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was blown away by this gem of a guide.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re barely dipping into intermediate python subjects like myself and wondering on what the next level is I recommend this guide. It has given me the motivation to revisit old projects and see how I can improve them.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "qvsv0m", "is_robot_indexable": true, "report_reasons": null, "author": "Static_One", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvsv0m/getting_to_know_asyncio_python_concurrency_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvsv0m/getting_to_know_asyncio_python_concurrency_with/", "subreddit_subscribers": 877944, "created_utc": 1637130034.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I need to find only one match and create a new column named \u2018f\\_in\\_i\u2019 in dataset A and fill the f\\_in\\_i with 1s and 0s. And if it catches another match, it should stay as it already was.\n\nHere is the expected outcome:\n\nhttps://preview.redd.it/lpv1mvz875081.png?width=220&amp;format=png&amp;auto=webp&amp;s=355a87050aa3b6d2c3f1d108757bd2be7474fdad\n\n    Here is the code I used:\n    \n    A = ['black mug', 'green and red pencil', 'yellow banana', 'black and white table', 'big round ball',' brown sugar','around'] \n    A = pd.DataFrame(A) \n    A.columns = ['items'] \n    print(A)   \n    B = ['black', 'green', 'red', 'green and red', 'purple', 'big', 'round', 'white'] \n    B = pd.DataFrame(B) \n    B.columns = ['features'] \n    print(B)  \n    \n    for i in A['items']:     \n        for j in B['features']:         \n            A.assign(f_in_i=re.findall(j,i)).astype(int)", "author_fullname": "t2_gfrf3g5e", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "using regex's findall in a for loop comparing two specific columns in different datasets.", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": 108, "top_awarded_type": null, "hide_score": true, "media_metadata": {"lpv1mvz875081": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 83, "x": 108, "u": "https://preview.redd.it/lpv1mvz875081.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=cd0c598181e4984309a41264a86174cad9dbaea7"}, {"y": 167, "x": 216, "u": "https://preview.redd.it/lpv1mvz875081.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=51441632172c02ad0978a2796d483be4f3b3b3cd"}], "s": {"y": 171, "x": 220, "u": "https://preview.redd.it/lpv1mvz875081.png?width=220&amp;format=png&amp;auto=webp&amp;s=355a87050aa3b6d2c3f1d108757bd2be7474fdad"}, "id": "lpv1mvz875081"}}, "name": "t3_qvxipc", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/IXI5MzmPYeUj8d1HhcYubLbB8icLT3dBCEZEP_CB_yY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1637149521.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I need to find only one match and create a new column named \u2018f_in_i\u2019 in dataset A and fill the f_in_i with 1s and 0s. And if it catches another match, it should stay as it already was.&lt;/p&gt;\n\n&lt;p&gt;Here is the expected outcome:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/lpv1mvz875081.png?width=220&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=355a87050aa3b6d2c3f1d108757bd2be7474fdad\"&gt;https://preview.redd.it/lpv1mvz875081.png?width=220&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=355a87050aa3b6d2c3f1d108757bd2be7474fdad&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Here is the code I used:\n\nA = [&amp;#39;black mug&amp;#39;, &amp;#39;green and red pencil&amp;#39;, &amp;#39;yellow banana&amp;#39;, &amp;#39;black and white table&amp;#39;, &amp;#39;big round ball&amp;#39;,&amp;#39; brown sugar&amp;#39;,&amp;#39;around&amp;#39;] \nA = pd.DataFrame(A) \nA.columns = [&amp;#39;items&amp;#39;] \nprint(A)   \nB = [&amp;#39;black&amp;#39;, &amp;#39;green&amp;#39;, &amp;#39;red&amp;#39;, &amp;#39;green and red&amp;#39;, &amp;#39;purple&amp;#39;, &amp;#39;big&amp;#39;, &amp;#39;round&amp;#39;, &amp;#39;white&amp;#39;] \nB = pd.DataFrame(B) \nB.columns = [&amp;#39;features&amp;#39;] \nprint(B)  \n\nfor i in A[&amp;#39;items&amp;#39;]:     \n    for j in B[&amp;#39;features&amp;#39;]:         \n        A.assign(f_in_i=re.findall(j,i)).astype(int)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "qvxipc", "is_robot_indexable": true, "report_reasons": null, "author": "miyasann", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvxipc/using_regexs_findall_in_a_for_loop_comparing_two/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvxipc/using_regexs_findall_in_a_for_loop_comparing_two/", "subreddit_subscribers": 877944, "created_utc": 1637149521.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "[https://forms.gle/ZpgY4Ywj2xTofcUEA](https://forms.gle/ZpgY4Ywj2xTofcUEA)", "author_fullname": "t2_4hrx9wih", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "We had to make a form about something we are passionate about and send it to that community for my English class, so I made a one about coding:", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvhmt0", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 32, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1637095494.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://forms.gle/ZpgY4Ywj2xTofcUEA\"&gt;https://forms.gle/ZpgY4Ywj2xTofcUEA&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/vMKIzLkUJncwDhCVavVRuSZG0d2HqNNj_O4GrhkpW78.jpg?auto=webp&amp;s=139f3d51ca84e5c58ade006ae65fc46b92ee99a2", "width": 1200, "height": 630}, "resolutions": [{"url": "https://external-preview.redd.it/vMKIzLkUJncwDhCVavVRuSZG0d2HqNNj_O4GrhkpW78.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=122b83321664b26b7e1f784e33b63815fa9277e9", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/vMKIzLkUJncwDhCVavVRuSZG0d2HqNNj_O4GrhkpW78.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7aab1ce95bbfc8148b00c1aca7e8cd38cf8ec81c", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/vMKIzLkUJncwDhCVavVRuSZG0d2HqNNj_O4GrhkpW78.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cc2c463ac27385e8f0a0505e9db8dadf38b9701d", "width": 320, "height": 168}, {"url": "https://external-preview.redd.it/vMKIzLkUJncwDhCVavVRuSZG0d2HqNNj_O4GrhkpW78.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=de5d360e88bb0172d9c907d97df57c3d7e4308ac", "width": 640, "height": 336}, {"url": "https://external-preview.redd.it/vMKIzLkUJncwDhCVavVRuSZG0d2HqNNj_O4GrhkpW78.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=11f236f968482543ca0696100a1ae712aba9498a", "width": 960, "height": 504}, {"url": "https://external-preview.redd.it/vMKIzLkUJncwDhCVavVRuSZG0d2HqNNj_O4GrhkpW78.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=54611d5129035132c0570f5c762d3d7693e4484b", "width": 1080, "height": 567}], "variants": {}, "id": "2DBzhMtpz7PWHHQebI8It8lY-L-pEv7c3pWJQPO0ZlI"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvhmt0", "is_robot_indexable": true, "report_reasons": null, "author": "hugs_four_drugs", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvhmt0/we_had_to_make_a_form_about_something_we_are/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvhmt0/we_had_to_make_a_form_about_something_we_are/", "subreddit_subscribers": 877944, "created_utc": 1637095494.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_7ogw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Monads and Python", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_qvte5l", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.78, "author_flair_background_color": null, "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 5, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/oc69yjjccaDZbrAhJSYnlX953M3h24Spry459E_PoWg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637132095.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "rbtcollins.wordpress.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://rbtcollins.wordpress.com/2018/08/26/monads-and-python/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/F6AGihc6sjMmnVLm-XWIe0jcP2vPZpBwjOqH2PhZX-c.jpg?auto=webp&amp;s=13353f39561ed11ccd79ec9880d3b36c19dcc81c", "width": 200, "height": 200}, "resolutions": [{"url": "https://external-preview.redd.it/F6AGihc6sjMmnVLm-XWIe0jcP2vPZpBwjOqH2PhZX-c.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0563ade4652d2408b81c0d4fd5f4ad1c26458007", "width": 108, "height": 108}], "variants": {}, "id": "sAYY86zgdT-GUuuQxQ55XhcVr4wy0uMIajd_UOBdg3Y"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvte5l", "is_robot_indexable": true, "report_reasons": null, "author": "pmz", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvte5l/monads_and_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://rbtcollins.wordpress.com/2018/08/26/monads-and-python/", "subreddit_subscribers": 877944, "created_utc": 1637132095.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Python was my first love as at university in the early 2000s. It could do anything. I kept using it even after learning other languages because Python was as powerful as Bash against the operating system and more elegant than any other language. To me python was the one language that did everything right. Well everything I knew about anyway. \n\nEventually I graduated, started working with different language and finally ventured in to the land of CI/CD or DevOps if you will. \n\n\nNow I hate python and everything about it. Because it seems there is no proper way of packing a python application. \n\nAnd people are doing all kinds of crazy shit. Taring down virtual envs, stuffing a bunch of platform dependencies into debs, creating pip packages who require undeclared dependancies. \n\nI absolutely lack the knowledge about best practices here. But I\u2019m also really struggling to find any good write ups on this topic. Could someone please help fill my knowledge gap here?\n\nMy usecase specifically is python apps that depend on grpc lbraries and has pretty deep platform dependencies on os packages.", "author_fullname": "t2_ncbea", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I am frustrated with packaging python, please educate me.", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qv1zwc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 198, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 198, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 1}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1637046269.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Python was my first love as at university in the early 2000s. It could do anything. I kept using it even after learning other languages because Python was as powerful as Bash against the operating system and more elegant than any other language. To me python was the one language that did everything right. Well everything I knew about anyway. &lt;/p&gt;\n\n&lt;p&gt;Eventually I graduated, started working with different language and finally ventured in to the land of CI/CD or DevOps if you will. &lt;/p&gt;\n\n&lt;p&gt;Now I hate python and everything about it. Because it seems there is no proper way of packing a python application. &lt;/p&gt;\n\n&lt;p&gt;And people are doing all kinds of crazy shit. Taring down virtual envs, stuffing a bunch of platform dependencies into debs, creating pip packages who require undeclared dependancies. &lt;/p&gt;\n\n&lt;p&gt;I absolutely lack the knowledge about best practices here. But I\u2019m also really struggling to find any good write ups on this topic. Could someone please help fill my knowledge gap here?&lt;/p&gt;\n\n&lt;p&gt;My usecase specifically is python apps that depend on grpc lbraries and has pretty deep platform dependencies on os packages.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "qv1zwc", "is_robot_indexable": true, "report_reasons": null, "author": "kjarkr", "discussion_type": null, "num_comments": 65, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qv1zwc/i_am_frustrated_with_packaging_python_please/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qv1zwc/i_am_frustrated_with_packaging_python_please/", "subreddit_subscribers": 877944, "created_utc": 1637046269.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_awhpt6sh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Password Manager Using Tkinter | iRead", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_qvx4dm", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1637147943.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "iread.ga", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://iread.ga/series/9/password-manager-using-tkinter", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "qvx4dm", "is_robot_indexable": true, "report_reasons": null, "author": "ashutoshkrris", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvx4dm/password_manager_using_tkinter_iread/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://iread.ga/series/9/password-manager-using-tkinter", "subreddit_subscribers": 877944, "created_utc": 1637147943.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Hi folks, I'm working on a tictactoe game. I've already coded it in python and used OOP to implement the game. I also know html, css, and a bit of javascript. I want to create a website for this game.\n\nWhat should my next steps be? Should I use flask?\n\nI am a complete beginner. Any help is appreciated.", "author_fullname": "t2_6542em0g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Mini Project Question", "link_flair_richtext": [{"e": "text", "t": "Beginner Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "beginner-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_qvx1mm", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Beginner Showcase", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1637147647.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi folks, I&amp;#39;m working on a tictactoe game. I&amp;#39;ve already coded it in python and used OOP to implement the game. I also know html, css, and a bit of javascript. I want to create a website for this game.&lt;/p&gt;\n\n&lt;p&gt;What should my next steps be? Should I use flask?&lt;/p&gt;\n\n&lt;p&gt;I am a complete beginner. Any help is appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "qvx1mm", "is_robot_indexable": true, "report_reasons": null, "author": "EngrRhys", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvx1mm/mini_project_question/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvx1mm/mini_project_question/", "subreddit_subscribers": 877944, "created_utc": 1637147647.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Good morning, I have to plot one histogram for each segment in a time series. \n\nThe size of this 'histogram' must be: \n\nheight=  MIN\\[Y\\]-MAX\\[Y\\] of each segment \n\nlenght= MIN\\[X\\]-MAX\\[X\\]: the size of segemnt.\n\nCan you help me?\n\nhttps://preview.redd.it/g5bcsvdu15081.png?width=437&amp;format=png&amp;auto=webp&amp;s=a76ccbad8c0cc64d754c988bb4d353241052e85a", "author_fullname": "t2_59s9oa8a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "PLOT HISTOGRAM ON TIME SERIES", "link_flair_richtext": [{"e": "text", "t": "Beginner Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "beginner-showcase", "downs": 0, "thumbnail_height": 80, "top_awarded_type": null, "hide_score": true, "media_metadata": {"g5bcsvdu15081": {"status": "valid", "e": "Image", "m": "image/png", "o": [{"y": 250, "x": 437, "u": "https://preview.redd.it/g5bcsvdu15081.png?width=320&amp;blur=32&amp;format=pjpg&amp;auto=webp&amp;s=f1211af36525f2d5b116d098318ea1209ce0c2dc"}], "p": [{"y": 61, "x": 108, "u": "https://preview.redd.it/g5bcsvdu15081.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=44297800d9cd636d7cf5fc9e900236c436ded81e"}, {"y": 123, "x": 216, "u": "https://preview.redd.it/g5bcsvdu15081.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=bcf5e02065b3593848859019885f4510069b919b"}, {"y": 183, "x": 320, "u": "https://preview.redd.it/g5bcsvdu15081.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=418891d80a6b0597eb378bcd1fcf0177d1a1b815"}], "s": {"y": 250, "x": 437, "u": "https://preview.redd.it/g5bcsvdu15081.png?width=437&amp;format=png&amp;auto=webp&amp;s=a76ccbad8c0cc64d754c988bb4d353241052e85a"}, "id": "g5bcsvdu15081"}}, "name": "t3_qvx14g", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Beginner Showcase", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "spoiler", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1637147589.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Good morning, I have to plot one histogram for each segment in a time series. &lt;/p&gt;\n\n&lt;p&gt;The size of this &amp;#39;histogram&amp;#39; must be: &lt;/p&gt;\n\n&lt;p&gt;height=  MIN[Y]-MAX[Y] of each segment &lt;/p&gt;\n\n&lt;p&gt;lenght= MIN[X]-MAX[X]: the size of segemnt.&lt;/p&gt;\n\n&lt;p&gt;Can you help me?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/g5bcsvdu15081.png?width=437&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=a76ccbad8c0cc64d754c988bb4d353241052e85a\"&gt;https://preview.redd.it/g5bcsvdu15081.png?width=437&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=a76ccbad8c0cc64d754c988bb4d353241052e85a&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63", "can_gild": false, "spoiler": true, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "qvx14g", "is_robot_indexable": true, "report_reasons": null, "author": "SirAccurate5848", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvx14g/plot_histogram_on_time_series/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvx14g/plot_histogram_on_time_series/", "subreddit_subscribers": 877944, "created_utc": 1637147589.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "It's called Unda (I know, lazy name) and it's up [on PyPi](https://pypi.org/project/unda/). Basically, it provides state-based undo and redo functionality for Python objects using a special manager object.\n\nIt does this by creating and managing undo and redo stacks (via Python deques) for each object placed in its care. Each time an object in its care is updated, a deepcopy of that object is saved to its undo stack, essentially functioning as a \"state\" for that object. Calling an undo on that object simply returns its latest state in its undo stack.\n\nInstall it by simply running\n\n    pip install unda\n\nor go to [its GitHub page](https://github.com/definite-d/unda) to see its code. Or maybe check out it's [user guide](https://github.com/definite-d/unda/blob/main/USERGUIDE.md) if you're interested.", "author_fullname": "t2_34rlooyh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I created a module for undo and redo in Python.", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_qvw72e", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1637146634.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1637144065.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s called Unda (I know, lazy name) and it&amp;#39;s up &lt;a href=\"https://pypi.org/project/unda/\"&gt;on PyPi&lt;/a&gt;. Basically, it provides state-based undo and redo functionality for Python objects using a special manager object.&lt;/p&gt;\n\n&lt;p&gt;It does this by creating and managing undo and redo stacks (via Python deques) for each object placed in its care. Each time an object in its care is updated, a deepcopy of that object is saved to its undo stack, essentially functioning as a &amp;quot;state&amp;quot; for that object. Calling an undo on that object simply returns its latest state in its undo stack.&lt;/p&gt;\n\n&lt;p&gt;Install it by simply running&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pip install unda\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or go to &lt;a href=\"https://github.com/definite-d/unda\"&gt;its GitHub page&lt;/a&gt; to see its code. Or maybe check out it&amp;#39;s &lt;a href=\"https://github.com/definite-d/unda/blob/main/USERGUIDE.md\"&gt;user guide&lt;/a&gt; if you&amp;#39;re interested.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zRVFLfjI58sm6FNSGRYUcnWA4juih6b47RNhJJEwW0g.jpg?auto=webp&amp;s=7be3fbd68fec490bfe355fd86957ea98a44ab6cd", "width": 300, "height": 300}, "resolutions": [{"url": "https://external-preview.redd.it/zRVFLfjI58sm6FNSGRYUcnWA4juih6b47RNhJJEwW0g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1fe4ea157a78df016e75342500a9c72764be7612", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/zRVFLfjI58sm6FNSGRYUcnWA4juih6b47RNhJJEwW0g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=34c514992d4fab42691b17ec329db3087d91765e", "width": 216, "height": 216}], "variants": {}, "id": "W4uRRTgdWbvpSjbVyu4fF2FNropOSmtKN3N_mIUX_f4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "qvw72e", "is_robot_indexable": true, "report_reasons": null, "author": "definite_d", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvw72e/i_created_a_module_for_undo_and_redo_in_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvw72e/i_created_a_module_for_undo_and_redo_in_python/", "subreddit_subscribers": 877944, "created_utc": 1637144065.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Mechanized-Branch as the name suggests automates your workflow related to git &amp; you github repo. This python scripts automatically can do things like creating a new repo, add, commiting and pushing in your repo. You just need to clone my repo and fill the necessary. It follows OOP structure.\n\nHere is the link : [https://github.com/Shreejan-35/Mechanized-Branch](https://github.com/Shreejan-35/Mechanized-Branch)\n\nMy motive to build this project is to help me and other developers to save their time by automating their workflow.", "author_fullname": "t2_d47gnd0k", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Mechanized-Branch: Your own github repo is now automated.", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvp5bi", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 3, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 1}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1637117433.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Mechanized-Branch as the name suggests automates your workflow related to git &amp;amp; you github repo. This python scripts automatically can do things like creating a new repo, add, commiting and pushing in your repo. You just need to clone my repo and fill the necessary. It follows OOP structure.&lt;/p&gt;\n\n&lt;p&gt;Here is the link : &lt;a href=\"https://github.com/Shreejan-35/Mechanized-Branch\"&gt;https://github.com/Shreejan-35/Mechanized-Branch&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My motive to build this project is to help me and other developers to save their time by automating their workflow.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Z3SKQ74Lp6JC6Za4LhKrO7c0a4bJbO5w7oY4uvxxkes.jpg?auto=webp&amp;s=114530c452b6f9a480f7a454220cc75971744de9", "width": 800, "height": 480}, "resolutions": [{"url": "https://external-preview.redd.it/Z3SKQ74Lp6JC6Za4LhKrO7c0a4bJbO5w7oY4uvxxkes.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=234ce6ae7f572848674afc5e66eb1a2ff6afb543", "width": 108, "height": 64}, {"url": "https://external-preview.redd.it/Z3SKQ74Lp6JC6Za4LhKrO7c0a4bJbO5w7oY4uvxxkes.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1837296e8fbf6df1d167ef0eeaaa67a02a3d4ff7", "width": 216, "height": 129}, {"url": "https://external-preview.redd.it/Z3SKQ74Lp6JC6Za4LhKrO7c0a4bJbO5w7oY4uvxxkes.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9c34e5b41ca88adb363782b429112c0fd369953f", "width": 320, "height": 192}, {"url": "https://external-preview.redd.it/Z3SKQ74Lp6JC6Za4LhKrO7c0a4bJbO5w7oY4uvxxkes.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18a3f4f302e6ec316d812ddb740849c88d61ace5", "width": 640, "height": 384}], "variants": {}, "id": "1bdRBuaO2cEupnPqAZt-akXpQDPUdOmQMOVE6ol_-NM"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "qvp5bi", "is_robot_indexable": true, "report_reasons": null, "author": "Shreejan_35", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvp5bi/mechanizedbranch_your_own_github_repo_is_now/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvp5bi/mechanizedbranch_your_own_github_repo_is_now/", "subreddit_subscribers": 877944, "created_utc": 1637117433.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_57s4p771", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "New paper out in Chaos, Solitons &amp; Fractals: Forecasting of noisy chaotic systems with deep neural networks Project developed in PyTorch/Keras/Sklearn", "link_flair_richtext": [{"e": "text", "t": "News"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "news", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_qvjfml", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.89, "author_flair_background_color": null, "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "News", "can_mod_post": false, "score": 7, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/wtHVUI4KYFfImtz7A1EknNx00RZjVZwV72u5RgLDgJ4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637100277.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "researchgate.net", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.researchgate.net/publication/356266614_Forecasting_of_noisy_chaotic_systems_with_deep_neural_networks", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/L35c4TDdbZrGlfNg-Rb0l_NEJPA62SY4oaKHenzxIKA.jpg?auto=webp&amp;s=167502ed73a185f6c0c2ecf6511921065903d60e", "width": 850, "height": 1141}, "resolutions": [{"url": "https://external-preview.redd.it/L35c4TDdbZrGlfNg-Rb0l_NEJPA62SY4oaKHenzxIKA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ab306f597ec585cd856863753b60a7b23e3b8a99", "width": 108, "height": 144}, {"url": "https://external-preview.redd.it/L35c4TDdbZrGlfNg-Rb0l_NEJPA62SY4oaKHenzxIKA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=750f7812a13554eb05cfc0e9bed5be05c1d8346b", "width": 216, "height": 289}, {"url": "https://external-preview.redd.it/L35c4TDdbZrGlfNg-Rb0l_NEJPA62SY4oaKHenzxIKA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e63bb15d023f0668d2883fe1d67d18184f85381b", "width": 320, "height": 429}, {"url": "https://external-preview.redd.it/L35c4TDdbZrGlfNg-Rb0l_NEJPA62SY4oaKHenzxIKA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ba70f2179822f455b9bf7082d1271ef669254bad", "width": 640, "height": 859}], "variants": {}, "id": "RbgXSzUJDJ2czhHwnKSBRRhrqhbmFsS4VIUkL82y9Zc"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvjfml", "is_robot_indexable": true, "report_reasons": null, "author": "_Mat_San_", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvjfml/new_paper_out_in_chaos_solitons_fractals/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.researchgate.net/publication/356266614_Forecasting_of_noisy_chaotic_systems_with_deep_neural_networks", "subreddit_subscribers": 877944, "created_utc": 1637100277.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_gmru15ku", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Namespaces and Scope in Python", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 93, "top_awarded_type": null, "hide_score": false, "name": "t3_qvusd2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/zRKsll_mVZbsJBK2wNHLLQqmnKGx0bdM80ha_SdyvWs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637138018.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "insideaiml.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://insideaiml.com/blog/Namespaces-and-Scope-in-Python-1142", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/LqWkHRhVmUiQuAT9cRID1scXkVAPq3GNpaNy2ZneieQ.jpg?auto=webp&amp;s=ab68409a3588cfe865037ae536c8b30f6fdeca21", "width": 480, "height": 320}, "resolutions": [{"url": "https://external-preview.redd.it/LqWkHRhVmUiQuAT9cRID1scXkVAPq3GNpaNy2ZneieQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=96cda30eb3305c1690f144eec87951d0796b05d0", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/LqWkHRhVmUiQuAT9cRID1scXkVAPq3GNpaNy2ZneieQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b2598d186b3dbc9dc666013df7e46c5af43f6de1", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/LqWkHRhVmUiQuAT9cRID1scXkVAPq3GNpaNy2ZneieQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=bcdfabcc25b5ce9ec5198867c09c72e3e2a4cff4", "width": 320, "height": 213}], "variants": {}, "id": "uYCp1Ve2effh3E8H7uZXOVLt_xMEx2ZHT0As5634a4o"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "qvusd2", "is_robot_indexable": true, "report_reasons": null, "author": "Exciting_Cap5676", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvusd2/namespaces_and_scope_in_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://insideaiml.com/blog/Namespaces-and-Scope-in-Python-1142", "subreddit_subscribers": 877944, "created_utc": 1637138018.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_1wi1cv4l", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Graphene 3.0 is released", "link_flair_richtext": [{"e": "text", "t": "News"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "news", "downs": 0, "thumbnail_height": 70, "top_awarded_type": null, "hide_score": false, "name": "t3_qvan8z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "News", "can_mod_post": false, "score": 18, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/9SGuUNPY0tmmKaHwbWFohgzpbq3Fq8k66WVuMXWkoW0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637077490.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/graphql-python/graphene/wiki/v3-release-notes", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/mDRXQaGe3ijPpEtmTZWsndLQCQzH7QvP_hZH1FVAlPE.jpg?auto=webp&amp;s=f26f0bb3d798ac4425d3625eb621e05f3eec0448", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/mDRXQaGe3ijPpEtmTZWsndLQCQzH7QvP_hZH1FVAlPE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=efda8d990c87f0f4612b9746568a3c9d9aec4617", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/mDRXQaGe3ijPpEtmTZWsndLQCQzH7QvP_hZH1FVAlPE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=def76214337cd2bb28e0860de9fc6d8b43ddf4c3", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/mDRXQaGe3ijPpEtmTZWsndLQCQzH7QvP_hZH1FVAlPE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d4106e10b90d34028dd4e6c2837d7bd6f2b63088", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/mDRXQaGe3ijPpEtmTZWsndLQCQzH7QvP_hZH1FVAlPE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=31b3e1da2ff01c02035630d4bd1c87a5b695e0c4", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/mDRXQaGe3ijPpEtmTZWsndLQCQzH7QvP_hZH1FVAlPE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e3392b426996b75850d74de331437e2205108ad1", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/mDRXQaGe3ijPpEtmTZWsndLQCQzH7QvP_hZH1FVAlPE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a091a986b226ed96d56f0850d5d3c5cb791a62e2", "width": 1080, "height": 540}], "variants": {}, "id": "aRMr2sjOa3Tm7XbaJ56N1zcucSW_DGPAbIQkqBK7In8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvan8z", "is_robot_indexable": true, "report_reasons": null, "author": "ConfidentMushroom", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvan8z/graphene_30_is_released/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/graphql-python/graphene/wiki/v3-release-notes", "subreddit_subscribers": 877944, "created_utc": 1637077490.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_6je46", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Python scripts in LibreOffice Calc using the ScriptForge library. Rafael Lima, 2021.", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_qve340", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "ups": 9, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/pHlLdyJz2sE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "height": 200}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Python scripts in LibreOffice Calc using the ScriptForge library - LibreOffice Conference 2021", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/pHlLdyJz2sE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "LibreOffice - The Document Foundation", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/pHlLdyJz2sE/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/LibreOfficeTheDocumentFoundation"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/pHlLdyJz2sE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/qve340", "height": 200}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 9, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/PMDrqxQiSI0Ma3AuM39vFW8dJJQ5yvgXNW0VAcOsMqw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637086298.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=pHlLdyJz2sE", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/2kERPKcv6NhLQjwsDxmfrhkRc4fBY5RJSYxLn-mMPBA.jpg?auto=webp&amp;s=a7d8832ea52c6a49ec78834fc7ec8d4aa62cbb1b", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/2kERPKcv6NhLQjwsDxmfrhkRc4fBY5RJSYxLn-mMPBA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a681772f801654036f7683c3c484138c11b33f9b", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/2kERPKcv6NhLQjwsDxmfrhkRc4fBY5RJSYxLn-mMPBA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bfd20221026b7538f86cb4f56d4453874adb26c3", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/2kERPKcv6NhLQjwsDxmfrhkRc4fBY5RJSYxLn-mMPBA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=67b8fff60dce40ce2280edf4aab480c8050b8ad6", "width": 320, "height": 240}], "variants": {}, "id": "EC6CjgNzpx4rx6IjCiDmQr4FEtRh_2L2BhEs82QoL4U"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "qve340", "is_robot_indexable": true, "report_reasons": null, "author": "buovjaga", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qve340/python_scripts_in_libreoffice_calc_using_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=pHlLdyJz2sE", "subreddit_subscribers": 877944, "created_utc": 1637086298.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Python scripts in LibreOffice Calc using the ScriptForge library - LibreOffice Conference 2021", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/pHlLdyJz2sE?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "LibreOffice - The Document Foundation", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/pHlLdyJz2sE/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/LibreOfficeTheDocumentFoundation"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_66han", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Smaller Python Docker Images with Build Mounts", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvsew8", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1637128432.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "andyfreeland.net", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://andyfreeland.net/smaller-python-docker-images-with-build-mounts/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvsew8", "is_robot_indexable": true, "report_reasons": null, "author": "rouge8", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvsew8/smaller_python_docker_images_with_build_mounts/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://andyfreeland.net/smaller-python-docker-images-with-build-mounts/", "subreddit_subscribers": 877944, "created_utc": 1637128432.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": " I want to create a twitter bot or program using python that can find images from twitter with a certain tag and download them to my pc as a png file. does anyone know if this is possible and if so how I would go about doing it?", "author_fullname": "t2_7djipzeh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Download images from twitter using python", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvrz68", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.33, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1637126900.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to create a twitter bot or program using python that can find images from twitter with a certain tag and download them to my pc as a png file. does anyone know if this is possible and if so how I would go about doing it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "qvrz68", "is_robot_indexable": true, "report_reasons": null, "author": "AdministrationHappy5", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvrz68/download_images_from_twitter_using_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvrz68/download_images_from_twitter_using_python/", "subreddit_subscribers": 877944, "created_utc": 1637126900.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Made a Word Search Game Using Pygame, one of the first projects. Not the best but I am pretty proud of myself. Please do check it out and let me know how I can improve upon it. Ive added a sample here for you guys to get a gist of what it is and how it works.\n\nHere is a link in case you are interested: [https://github.com/Kabeer-NT/Word-Search](https://github.com/Kabeer-NT/Word-Search)\n\n&amp;#x200B;\n\nhttps://preview.redd.it/kvn7ge6r11081.jpg?width=1001&amp;format=pjpg&amp;auto=webp&amp;s=5c483a2a2d6b31eeaba27afb2e19b8a4d7903439\n\nThank you all in advance and have a great day!", "author_fullname": "t2_95c8ia9u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Word Search Using Pygame", "link_flair_richtext": [{"e": "text", "t": "Beginner Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "beginner-showcase", "downs": 0, "thumbnail_height": 110, "top_awarded_type": null, "hide_score": false, "media_metadata": {"kvn7ge6r11081": {"status": "valid", "e": "Image", "m": "image/jpg", "p": [{"y": 85, "x": 108, "u": "https://preview.redd.it/kvn7ge6r11081.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bd65f7d8869da2a228f59a8625330915dc31d743"}, {"y": 170, "x": 216, "u": "https://preview.redd.it/kvn7ge6r11081.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a3d0d44b3c750d1d61d194a941aadd8e6748ffa8"}, {"y": 252, "x": 320, "u": "https://preview.redd.it/kvn7ge6r11081.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c4f977b9cad881048e7241fe4a8e9da3e7fb0dd0"}, {"y": 505, "x": 640, "u": "https://preview.redd.it/kvn7ge6r11081.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6ed39d45d9734fd96433955fa4f18539148913d2"}, {"y": 757, "x": 960, "u": "https://preview.redd.it/kvn7ge6r11081.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e710bae4cfdb5f44759c69fbec5e0bb1e2876d64"}], "s": {"y": 790, "x": 1001, "u": "https://preview.redd.it/kvn7ge6r11081.jpg?width=1001&amp;format=pjpg&amp;auto=webp&amp;s=5c483a2a2d6b31eeaba27afb2e19b8a4d7903439"}, "id": "kvn7ge6r11081"}}, "name": "t3_qvivzs", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.84, "author_flair_background_color": null, "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Beginner Showcase", "can_mod_post": false, "score": 4, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/ipR7L6vDT3xHoNue571uPGapQPuzQ8QLDDgzYhRFQLI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "subreddit_type": "public", "created": 1637098840.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Made a Word Search Game Using Pygame, one of the first projects. Not the best but I am pretty proud of myself. Please do check it out and let me know how I can improve upon it. Ive added a sample here for you guys to get a gist of what it is and how it works.&lt;/p&gt;\n\n&lt;p&gt;Here is a link in case you are interested: &lt;a href=\"https://github.com/Kabeer-NT/Word-Search\"&gt;https://github.com/Kabeer-NT/Word-Search&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/kvn7ge6r11081.jpg?width=1001&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=5c483a2a2d6b31eeaba27afb2e19b8a4d7903439\"&gt;https://preview.redd.it/kvn7ge6r11081.jpg?width=1001&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=5c483a2a2d6b31eeaba27afb2e19b8a4d7903439&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Thank you all in advance and have a great day!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/shVg9o2ZULdfmJz-WH8vFML2u0iybqVXG2qMPtTVjJs.jpg?auto=webp&amp;s=9339e32ee4c9031d4ba91fb9ff4e6319ff43ac9a", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/shVg9o2ZULdfmJz-WH8vFML2u0iybqVXG2qMPtTVjJs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=707737cdbd99406bc2af7a181b74d85b2b972dc6", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/shVg9o2ZULdfmJz-WH8vFML2u0iybqVXG2qMPtTVjJs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f415888a8d488c91bb0002e80e5d850022a581d7", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/shVg9o2ZULdfmJz-WH8vFML2u0iybqVXG2qMPtTVjJs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=02da4b01c9b1886f92fd5cd32f822508dc77237d", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/shVg9o2ZULdfmJz-WH8vFML2u0iybqVXG2qMPtTVjJs.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c022d58f22b38e8c47f771be8e6be6dadbba51ed", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/shVg9o2ZULdfmJz-WH8vFML2u0iybqVXG2qMPtTVjJs.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=39e2e74b206b660c3a7618bca154118484c5415a", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/shVg9o2ZULdfmJz-WH8vFML2u0iybqVXG2qMPtTVjJs.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=913021411ab95d03596be727b2189d4fde5d1230", "width": 1080, "height": 540}], "variants": {}, "id": "Iv7tTvB5FAxQUUkD0ftIqOZDzYAmlXpRYIQP_RTfOlY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "qvivzs", "is_robot_indexable": true, "report_reasons": null, "author": "Rev3010", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvivzs/word_search_using_pygame/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvivzs/word_search_using_pygame/", "subreddit_subscribers": 877944, "created_utc": 1637098840.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Hi,\n\nHave been using this .py for some time now. Decided to put it on Git and shout-out here. It encrypts text using Vigenere's symmetric cipher. \n\n[https://github.com/afhamuche/sid\\_sub](https://github.com/afhamuche/sid_sub)\n\nI have only been using it for encryption and have not implemented the round-trip yet. Been thinking of ways to make it look clean and make better use of today's hardware capabilities.\n\nThere's plenty of room for improvement! GNU/GPL 3.0.\n\nThanks,\n\nDaturnus", "author_fullname": "t2_8qa9igaz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "sid_sub symmetric encryption (Vigenere)", "link_flair_richtext": [{"e": "text", "t": "Beginner Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "beginner-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_qvcytx", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 40, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Beginner Showcase", "can_mod_post": false, "score": 40, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1637083451.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;Have been using this .py for some time now. Decided to put it on Git and shout-out here. It encrypts text using Vigenere&amp;#39;s symmetric cipher. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/afhamuche/sid_sub\"&gt;https://github.com/afhamuche/sid_sub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I have only been using it for encryption and have not implemented the round-trip yet. Been thinking of ways to make it look clean and make better use of today&amp;#39;s hardware capabilities.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s plenty of room for improvement! GNU/GPL 3.0.&lt;/p&gt;\n\n&lt;p&gt;Thanks,&lt;/p&gt;\n\n&lt;p&gt;Daturnus&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/FDkO2q9bcdawpFZuQAzEHrUR8peSNMmeGXCUj8_R_q8.jpg?auto=webp&amp;s=5791b2cbe9ca8f33ded86859493d3b43d2753ca5", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/FDkO2q9bcdawpFZuQAzEHrUR8peSNMmeGXCUj8_R_q8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=acf646a6c7366b6b437fa3532a3d634c9a00c1ef", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/FDkO2q9bcdawpFZuQAzEHrUR8peSNMmeGXCUj8_R_q8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c568302a0cc6af3f38e79b351c0b84bc2571fee8", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/FDkO2q9bcdawpFZuQAzEHrUR8peSNMmeGXCUj8_R_q8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b31e505b563f1581ea554e8d551cfe81cadc047a", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/FDkO2q9bcdawpFZuQAzEHrUR8peSNMmeGXCUj8_R_q8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5b0e4ada15fbe7fccb4547b621f74a483f30e02e", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/FDkO2q9bcdawpFZuQAzEHrUR8peSNMmeGXCUj8_R_q8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=60f2dfa8a04125433f5d7998c037a98a89dbbdcf", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/FDkO2q9bcdawpFZuQAzEHrUR8peSNMmeGXCUj8_R_q8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d4ac3cb52459aad741173d0f1109a32d6e62ae35", "width": 1080, "height": 540}], "variants": {}, "id": "uz6epfNAHmn4lvnyrL0DgFFPA0WA0vZpYgsx1Zig1_s"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "qvcytx", "is_robot_indexable": true, "report_reasons": null, "author": "Daturnus", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvcytx/sid_sub_symmetric_encryption_vigenere/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/qvcytx/sid_sub_symmetric_encryption_vigenere/", "subreddit_subscribers": 877944, "created_utc": 1637083451.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_evis3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How variables are saved in Python and Rust. Side by Side 5: list/array", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 90, "top_awarded_type": null, "hide_score": false, "name": "t3_qvl07z", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/TtSUIjpf7Y8nuePwStqIVJtswq4dPdQcV_wa8CXvsPA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "subreddit_type": "public", "created": 1637104648.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://medium.com/geekculture/how-variables-are-saved-in-python-and-rust-side-by-side-5-list-array-418012c01ccd", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/ua8clvAvR6AqNrURiEpIkRrnrzB4iSNEm_0EvvX1Qa0.jpg?auto=webp&amp;s=fa0c5c29ef1f521cb283048b44839b2eb4aa4335", "width": 532, "height": 342}, "resolutions": [{"url": "https://external-preview.redd.it/ua8clvAvR6AqNrURiEpIkRrnrzB4iSNEm_0EvvX1Qa0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4699cf07948abb2c8a682c07193ded2988abd1a7", "width": 108, "height": 69}, {"url": "https://external-preview.redd.it/ua8clvAvR6AqNrURiEpIkRrnrzB4iSNEm_0EvvX1Qa0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=946625fef58c378afc42a3a108d9106029f5404a", "width": 216, "height": 138}, {"url": "https://external-preview.redd.it/ua8clvAvR6AqNrURiEpIkRrnrzB4iSNEm_0EvvX1Qa0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ca856ec29f95c382675ab9e689cbe1922e9542d2", "width": 320, "height": 205}], "variants": {}, "id": "ZsVgWmfPj5eJBckL8AuGafzp8e8RO-SvtDcIpEnFFvM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "mod_note": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "num_reports": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "qvl07z", "is_robot_indexable": true, "report_reasons": null, "author": "MarshalShi", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/qvl07z/how_variables_are_saved_in_python_and_rust_side/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/geekculture/how-variables-are-saved-in-python-and-rust-side-by-side-5-list-array-418012c01ccd", "subreddit_subscribers": 877944, "created_utc": 1637104648.0, "num_crossposts": 0, "media": null, "is_video": false}}], "before": null}}
